
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUPLUSUMINUSAND ARROW ASSIGN BEGIN BOOL_LITERAL BREAK COLOR_LITERAL COMMA COND COND_ELSE CONTINUE DEFINE DELIM DIV END EQ FLOAT_LITERAL FOR_STMT FOR_STMT_BY FOR_STMT_TO GE GT ID IF_COND IF_COND_ELSE INT_LITERAL LE LPAR LSQBR LT MINUS MOD MUL NEQ NOT OR PLUS RPAR RSQBR STR_LITERALstatement_list :\n                      | statement\n                      | statement_list statementstatement : fun_def_stmt\n                 | expression_stmt\n                 | loop_break_stmt\n                 | loop_continue_stmtloop_break_stmt : BREAK DELIMloop_continue_stmt : CONTINUE DELIMexpression_stmt : simple_expression DELIM\n                       | complex_expression\n                       | var_def_stmt\n                       | var_defs_stmt\n                       | var_assign_stmtvar_assign_stmt : ID ASSIGN expression DELIMvar_def_stmt : var_def DELIMvar_def : ID DEFINE expressionvar_defs_stmt : LSQBR id_list RSQBR DEFINE LSQBR simple_expr_list RSQBR DELIMid_list : ID\n               | id_list COMMA IDexpression : simple_expression\n                  | complex_expressionsimple_expr_list : simple_expression\n                        | simple_expr_list COMMA simple_expression\n                        | id_list\n                        | id_list COMMA simple_expressionsimple_expression : or_expr\n                         | or_expr COND simple_expression COND_ELSE simple_expressionor_expr : and_expr\n               | or_expr OR and_exprand_expr : eq_expr\n                | and_expr AND eq_expreq_expr : cmp_expr\n               | cmp_expr EQ cmp_expr\n               | cmp_expr NEQ cmp_exprcmp_expr : add_expr\n                | add_expr GT add_expr\n                | add_expr GE add_expr\n                | add_expr LT add_expr\n                | add_expr LE add_expradd_expr : mul_expr\n                | add_expr PLUS mul_expr\n                | add_expr MINUS mul_exprmul_expr : unary_expr\n                | mul_expr MUL unary_expr\n                | mul_expr DIV unary_expr\n                | mul_expr MOD unary_exprunary_expr : sqbr_expr\n                  | NOT sqbr_expr\n                  | PLUS sqbr_expr %prec UPLUS\n                  | MINUS sqbr_expr %prec UMINUSsqbr_expr : atom\n                 | atom LSQBR simple_expression RSQBRatom : fun_call\n            | var_ref\n            | literal\n            | LPAR simple_expression RPARvar_ref : IDfun_call : fun_call0\n                | fun_call1\n                | fun_call2\n                | fun_call3\n                | fun_call4\n                | fun_call5fun_call0 : ID LPAR RPARfun_call1 : ID LPAR id_list RPARfun_call2 : ID LPAR simple_expr_list RPARfun_call3 : ID LPAR kw_arg_list RPARfun_call4 : ID LPAR id_list COMMA kw_arg_list RPARfun_call5 : ID LPAR simple_expr_list COMMA kw_arg_list RPARkw_arg_list : kw_arg\n                   | kw_arg_list COMMA kw_argkw_arg : ID DEFINE simple_expressionliteral : INT_LITERAL\n               | FLOAT_LITERAL\n               | STR_LITERAL\n               | BOOL_LITERAL\n               | COLOR_LITERAL\n               | list_literallist_literal : LSQBR simple_expr_list RSQBRcomplex_expression : if_expr\n                          | for_exprif_expr : IF_COND simple_expression stmts_block\n               | IF_COND simple_expression stmts_block IF_COND_ELSE stmts_blockfor_expr : FOR_STMT var_def FOR_STMT_TO simple_expression stmts_block\n                | FOR_STMT var_def FOR_STMT_TO simple_expression FOR_STMT_BYstmts_block : BEGIN statement_list ENDfun_def_stmt : fun_def_stmt_1\n                    | fun_def_stmt_mfun_def_stmt_1 : ID LPAR id_list RPAR ARROW simple_expression DELIMfun_def_stmt_m : ID LPAR id_list RPAR ARROW stmts_block'
    
_lr_action_items = {'BREAK':([0,1,2,3,4,5,6,7,8,10,11,12,13,19,20,51,52,53,54,63,107,108,129,138,152,153,154,155,157,161,163,],[14,14,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,-81,-82,-3,-10,-8,-9,-16,-83,14,-15,14,-84,-87,-85,-86,-91,-90,-18,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,10,11,12,13,19,20,51,52,53,54,63,107,108,129,138,152,153,154,155,157,161,163,],[15,15,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,-81,-82,-3,-10,-8,-9,-16,-83,15,-15,15,-84,-87,-85,-86,-91,-90,-18,]),'ID':([0,1,2,3,4,5,6,7,8,10,11,12,13,17,19,20,22,24,25,30,31,34,51,52,53,54,55,56,57,59,61,62,63,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,107,108,109,122,124,126,128,129,130,132,138,142,151,152,153,154,155,157,161,163,],[16,16,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,60,-81,-82,66,60,71,60,60,60,-3,-10,-8,-9,87,60,60,66,60,60,-16,60,60,60,60,60,60,60,60,60,60,60,60,60,87,134,60,-83,16,60,60,143,145,148,-15,134,60,16,60,66,-84,-87,-85,-86,-91,-90,-18,]),'LSQBR':([0,1,2,3,4,5,6,7,8,10,11,12,13,16,17,19,20,22,24,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,66,68,72,73,74,75,76,77,78,79,80,81,82,86,87,89,97,99,103,104,105,107,108,109,122,123,124,125,126,127,129,130,132,133,134,138,142,143,145,149,151,152,153,154,155,157,158,159,161,163,],[22,22,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,-58,59,-81,-82,59,59,59,59,59,86,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-3,-10,-8,-9,59,59,59,59,-58,59,59,-16,-58,59,59,59,59,59,59,59,59,59,59,59,59,59,-58,-65,-57,59,59,-80,59,-83,22,59,59,-66,59,-67,59,-68,-15,59,59,151,-58,22,59,-58,-58,-66,59,-84,-87,-85,-86,-91,-69,-70,-90,-18,]),'IF_COND':([0,1,2,3,4,5,6,7,8,10,11,12,13,19,20,51,52,53,54,56,57,63,107,108,129,138,152,153,154,155,157,161,163,],[24,24,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,-81,-82,-3,-10,-8,-9,24,24,-16,-83,24,-15,24,-84,-87,-85,-86,-91,-90,-18,]),'FOR_STMT':([0,1,2,3,4,5,6,7,8,10,11,12,13,19,20,51,52,53,54,56,57,63,107,108,129,138,152,153,154,155,157,161,163,],[25,25,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,-81,-82,-3,-10,-8,-9,25,25,-16,-83,25,-15,25,-84,-87,-85,-86,-91,-90,-18,]),'NOT':([0,1,2,3,4,5,6,7,8,10,11,12,13,17,19,20,22,24,51,52,53,54,55,56,57,59,61,62,63,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,107,108,109,122,124,126,129,130,132,138,142,151,152,153,154,155,157,161,163,],[34,34,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,34,-81,-82,34,34,-3,-10,-8,-9,34,34,34,34,34,34,-16,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-83,34,34,34,34,34,-15,34,34,34,34,34,-84,-87,-85,-86,-91,-90,-18,]),'PLUS':([0,1,2,3,4,5,6,7,8,10,11,12,13,16,17,19,20,22,24,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,66,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,97,99,103,104,105,107,108,109,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,129,130,132,134,138,140,142,143,145,149,151,152,153,154,155,157,158,159,161,163,],[30,30,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,-58,30,-81,-82,30,30,78,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-3,-10,-8,-9,30,30,30,30,-58,30,30,-16,-58,30,30,30,30,30,30,30,30,30,30,30,30,-50,-51,-49,30,-58,-65,-57,30,30,-80,30,-83,30,30,78,78,78,78,-42,-43,-45,-46,-47,30,-66,30,-67,30,-68,-15,30,30,-58,30,-53,30,-58,-58,-66,30,-84,-87,-85,-86,-91,-69,-70,-90,-18,]),'MINUS':([0,1,2,3,4,5,6,7,8,10,11,12,13,16,17,19,20,22,24,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,66,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,97,99,103,104,105,107,108,109,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,129,130,132,134,138,140,142,143,145,149,151,152,153,154,155,157,158,159,161,163,],[31,31,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,-58,31,-81,-82,31,31,79,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-3,-10,-8,-9,31,31,31,31,-58,31,31,-16,-58,31,31,31,31,31,31,31,31,31,31,31,31,-50,-51,-49,31,-58,-65,-57,31,31,-80,31,-83,31,31,79,79,79,79,-42,-43,-45,-46,-47,31,-66,31,-67,31,-68,-15,31,31,-58,31,-53,31,-58,-58,-66,31,-84,-87,-85,-86,-91,-69,-70,-90,-18,]),'LPAR':([0,1,2,3,4,5,6,7,8,10,11,12,13,16,17,19,20,22,24,30,31,34,51,52,53,54,55,56,57,59,60,61,62,63,66,68,72,73,74,75,76,77,78,79,80,81,82,86,87,99,103,105,107,108,109,122,124,126,129,130,132,134,138,142,143,145,151,152,153,154,155,157,161,163,],[17,17,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,55,17,-81,-82,17,17,17,17,17,-3,-10,-8,-9,17,17,17,17,99,17,17,-16,99,17,17,17,17,17,17,17,17,17,17,17,17,17,99,17,17,17,-83,17,17,17,17,17,-15,17,17,99,17,17,99,99,17,-84,-87,-85,-86,-91,-90,-18,]),'INT_LITERAL':([0,1,2,3,4,5,6,7,8,10,11,12,13,17,19,20,22,24,30,31,34,51,52,53,54,55,56,57,59,61,62,63,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,107,108,109,122,124,126,129,130,132,138,142,151,152,153,154,155,157,161,163,],[45,45,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,45,-81,-82,45,45,45,45,45,-3,-10,-8,-9,45,45,45,45,45,45,-16,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-83,45,45,45,45,45,-15,45,45,45,45,45,-84,-87,-85,-86,-91,-90,-18,]),'FLOAT_LITERAL':([0,1,2,3,4,5,6,7,8,10,11,12,13,17,19,20,22,24,30,31,34,51,52,53,54,55,56,57,59,61,62,63,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,107,108,109,122,124,126,129,130,132,138,142,151,152,153,154,155,157,161,163,],[46,46,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,46,-81,-82,46,46,46,46,46,-3,-10,-8,-9,46,46,46,46,46,46,-16,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-83,46,46,46,46,46,-15,46,46,46,46,46,-84,-87,-85,-86,-91,-90,-18,]),'STR_LITERAL':([0,1,2,3,4,5,6,7,8,10,11,12,13,17,19,20,22,24,30,31,34,51,52,53,54,55,56,57,59,61,62,63,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,107,108,109,122,124,126,129,130,132,138,142,151,152,153,154,155,157,161,163,],[47,47,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,47,-81,-82,47,47,47,47,47,-3,-10,-8,-9,47,47,47,47,47,47,-16,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-83,47,47,47,47,47,-15,47,47,47,47,47,-84,-87,-85,-86,-91,-90,-18,]),'BOOL_LITERAL':([0,1,2,3,4,5,6,7,8,10,11,12,13,17,19,20,22,24,30,31,34,51,52,53,54,55,56,57,59,61,62,63,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,107,108,109,122,124,126,129,130,132,138,142,151,152,153,154,155,157,161,163,],[48,48,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,48,-81,-82,48,48,48,48,48,-3,-10,-8,-9,48,48,48,48,48,48,-16,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-83,48,48,48,48,48,-15,48,48,48,48,48,-84,-87,-85,-86,-91,-90,-18,]),'COLOR_LITERAL':([0,1,2,3,4,5,6,7,8,10,11,12,13,17,19,20,22,24,30,31,34,51,52,53,54,55,56,57,59,61,62,63,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,107,108,109,122,124,126,129,130,132,138,142,151,152,153,154,155,157,161,163,],[49,49,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,49,-81,-82,49,49,49,49,49,-3,-10,-8,-9,49,49,49,49,49,49,-16,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-83,49,49,49,49,49,-15,49,49,49,49,49,-84,-87,-85,-86,-91,-90,-18,]),'$end':([0,1,2,3,4,5,6,7,8,10,11,12,13,19,20,51,52,53,54,63,107,129,152,153,154,155,157,161,163,],[-1,0,-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,-81,-82,-3,-10,-8,-9,-16,-83,-15,-84,-87,-85,-86,-91,-90,-18,]),'END':([2,3,4,5,6,7,8,10,11,12,13,19,20,51,52,53,54,63,107,108,129,138,152,153,154,155,157,161,163,],[-2,-4,-5,-6,-7,-88,-89,-11,-12,-13,-14,-81,-82,-3,-10,-8,-9,-16,-83,-1,-15,153,-84,-87,-85,-86,-91,-90,-18,]),'DELIM':([9,14,15,16,18,19,20,21,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,83,84,85,89,93,94,95,96,97,101,104,106,107,110,111,112,113,114,115,116,117,118,119,120,123,125,127,140,149,150,152,153,154,155,156,158,159,162,],[52,53,54,-58,-27,-81,-82,63,-29,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-50,-51,-49,-65,129,-21,-22,-17,-57,-30,-80,-32,-83,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,-66,-67,-68,-53,-66,-28,-84,-87,-85,-86,161,-69,-70,163,]),'ASSIGN':([16,],[56,]),'DEFINE':([16,71,87,102,143,145,148,],[57,57,122,133,122,122,122,]),'MUL':([16,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,104,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,80,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-80,80,80,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'DIV':([16,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,104,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,81,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-80,81,81,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'MOD':([16,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,104,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,82,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-80,82,82,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'GT':([16,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,104,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,74,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-80,-42,-43,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'GE':([16,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,104,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,75,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-80,-42,-43,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'LT':([16,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,104,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,76,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-80,-42,-43,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'LE':([16,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,104,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,77,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-80,-42,-43,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'EQ':([16,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,104,112,113,114,115,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,72,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-80,-37,-38,-39,-40,-42,-43,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'NEQ':([16,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,104,112,113,114,115,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,73,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-80,-37,-38,-39,-40,-42,-43,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'AND':([16,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,101,104,106,110,111,112,113,114,115,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,68,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,68,-80,-32,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'COND':([16,18,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,101,104,106,110,111,112,113,114,115,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,61,-29,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-30,-80,-32,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'OR':([16,18,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,66,83,84,85,87,89,97,101,104,106,110,111,112,113,114,115,116,117,118,119,120,123,125,127,134,140,143,145,149,158,159,],[-58,62,-29,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-58,-50,-51,-49,-58,-65,-57,-30,-80,-32,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,-66,-67,-68,-58,-53,-58,-58,-66,-69,-70,]),'RPAR':([18,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,55,58,60,67,83,84,85,87,88,89,90,91,92,97,99,101,104,106,110,111,112,113,114,115,116,117,118,119,120,125,127,131,135,136,140,141,143,144,145,146,147,149,150,158,159,],[-27,-29,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,89,97,-58,-23,-50,-51,-49,-19,123,-65,125,127,-71,-57,89,-30,-80,-32,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,-67,-68,149,-26,-24,-53,-73,-20,158,-58,159,-72,-66,-28,-69,-70,]),'RSQBR':([18,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,64,65,66,67,83,84,85,89,97,98,101,104,106,110,111,112,113,114,115,116,117,118,119,120,121,125,127,134,135,136,140,149,150,158,159,160,],[-27,-29,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,102,104,-19,-23,-50,-51,-49,-65,-57,-25,-30,-80,-32,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,140,-67,-68,-20,-26,-24,-53,-66,-28,-69,-70,162,]),'COMMA':([18,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,64,65,66,67,83,84,85,87,88,89,90,91,92,97,98,101,104,106,110,111,112,113,114,115,116,117,118,119,120,125,127,131,134,135,136,140,141,143,144,145,146,147,149,150,158,159,160,],[-27,-29,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,103,105,-19,-23,-50,-51,-49,-19,124,-65,126,128,-71,-57,130,-30,-80,-32,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,-67,-68,124,-20,-26,-24,-53,-73,-20,128,-58,128,-72,-66,-28,-69,-70,105,]),'BEGIN':([18,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,69,83,84,85,89,97,101,104,106,110,111,112,113,114,115,116,117,118,119,120,125,127,137,139,140,142,149,150,158,159,],[-27,-29,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,108,-50,-51,-49,-65,-57,-30,-80,-32,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,-67,-68,108,108,-53,108,-66,-28,-69,-70,]),'FOR_STMT_TO':([18,19,20,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,70,83,84,85,89,94,95,96,97,101,104,106,107,110,111,112,113,114,115,116,117,118,119,120,125,127,140,149,150,152,153,154,155,158,159,],[-27,-81,-82,-29,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,109,-50,-51,-49,-65,-21,-22,-17,-57,-30,-80,-32,-83,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,-67,-68,-53,-66,-28,-84,-87,-85,-86,-69,-70,]),'COND_ELSE':([18,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,83,84,85,89,97,100,101,104,106,110,111,112,113,114,115,116,117,118,119,120,125,127,140,149,150,158,159,],[-27,-29,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-50,-51,-49,-65,-57,132,-30,-80,-32,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,-67,-68,-53,-66,-28,-69,-70,]),'FOR_STMT_BY':([18,23,26,27,28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,83,84,85,89,97,101,104,106,110,111,112,113,114,115,116,117,118,119,120,125,127,139,140,149,150,158,159,],[-27,-29,-31,-33,-36,-41,-44,-48,-52,-54,-55,-56,-59,-60,-61,-62,-63,-64,-74,-75,-76,-77,-78,-79,-58,-50,-51,-49,-65,-57,-30,-80,-32,-34,-35,-37,-38,-39,-40,-42,-43,-45,-46,-47,-67,-68,155,-53,-66,-28,-69,-70,]),'IF_COND_ELSE':([107,153,],[137,-87,]),'ARROW':([123,],[142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,108,],[1,138,]),'statement':([0,1,108,138,],[2,51,2,51,]),'fun_def_stmt':([0,1,108,138,],[3,3,3,3,]),'expression_stmt':([0,1,108,138,],[4,4,4,4,]),'loop_break_stmt':([0,1,108,138,],[5,5,5,5,]),'loop_continue_stmt':([0,1,108,138,],[6,6,6,6,]),'fun_def_stmt_1':([0,1,108,138,],[7,7,7,7,]),'fun_def_stmt_m':([0,1,108,138,],[8,8,8,8,]),'simple_expression':([0,1,17,22,24,55,56,57,59,61,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[9,9,58,67,69,67,94,94,67,100,121,67,135,136,9,139,141,135,136,135,150,9,156,67,]),'complex_expression':([0,1,56,57,108,138,],[10,10,95,95,10,10,]),'var_def_stmt':([0,1,108,138,],[11,11,11,11,]),'var_defs_stmt':([0,1,108,138,],[12,12,12,12,]),'var_assign_stmt':([0,1,108,138,],[13,13,13,13,]),'or_expr':([0,1,17,22,24,55,56,57,59,61,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'if_expr':([0,1,56,57,108,138,],[19,19,19,19,19,19,]),'for_expr':([0,1,56,57,108,138,],[20,20,20,20,20,20,]),'var_def':([0,1,25,108,138,],[21,21,70,21,21,]),'and_expr':([0,1,17,22,24,55,56,57,59,61,62,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[23,23,23,23,23,23,23,23,23,23,101,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'eq_expr':([0,1,17,22,24,55,56,57,59,61,62,68,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[26,26,26,26,26,26,26,26,26,26,26,106,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'cmp_expr':([0,1,17,22,24,55,56,57,59,61,62,68,72,73,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[27,27,27,27,27,27,27,27,27,27,27,27,110,111,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'add_expr':([0,1,17,22,24,55,56,57,59,61,62,68,72,73,74,75,76,77,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,112,113,114,115,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'mul_expr':([0,1,17,22,24,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,116,117,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'unary_expr':([0,1,17,22,24,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,119,120,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'sqbr_expr':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[33,33,33,33,33,83,84,85,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'atom':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'fun_call':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'var_ref':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'literal':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'fun_call0':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'fun_call1':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'fun_call2':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'fun_call3':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'fun_call4':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'fun_call5':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'list_literal':([0,1,17,22,24,30,31,34,55,56,57,59,61,62,68,72,73,74,75,76,77,78,79,80,81,82,86,99,103,105,108,109,122,124,126,130,132,138,142,151,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'id_list':([22,55,59,99,151,],[64,88,98,131,98,]),'simple_expr_list':([22,55,59,99,151,],[65,90,65,90,160,]),'kw_arg_list':([55,99,124,126,],[91,91,144,146,]),'kw_arg':([55,99,124,126,128,],[92,92,92,92,147,]),'expression':([56,57,],[93,96,]),'stmts_block':([69,137,139,142,],[107,152,154,157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> <empty>','statement_list',0,'p_statement_list','parser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement -> fun_def_stmt','statement',1,'p_statement','parser.py',41),
  ('statement -> expression_stmt','statement',1,'p_statement','parser.py',42),
  ('statement -> loop_break_stmt','statement',1,'p_statement','parser.py',43),
  ('statement -> loop_continue_stmt','statement',1,'p_statement','parser.py',44),
  ('loop_break_stmt -> BREAK DELIM','loop_break_stmt',2,'p_loop_break_stmt','parser.py',49),
  ('loop_continue_stmt -> CONTINUE DELIM','loop_continue_stmt',2,'p_loop_continue_stmt','parser.py',53),
  ('expression_stmt -> simple_expression DELIM','expression_stmt',2,'p_expression_stmt','parser.py',58),
  ('expression_stmt -> complex_expression','expression_stmt',1,'p_expression_stmt','parser.py',59),
  ('expression_stmt -> var_def_stmt','expression_stmt',1,'p_expression_stmt','parser.py',60),
  ('expression_stmt -> var_defs_stmt','expression_stmt',1,'p_expression_stmt','parser.py',61),
  ('expression_stmt -> var_assign_stmt','expression_stmt',1,'p_expression_stmt','parser.py',62),
  ('var_assign_stmt -> ID ASSIGN expression DELIM','var_assign_stmt',4,'p_var_assign_stmt','parser.py',66),
  ('var_def_stmt -> var_def DELIM','var_def_stmt',2,'p_var_def_stmt','parser.py',70),
  ('var_def -> ID DEFINE expression','var_def',3,'p_var_def','parser.py',74),
  ('var_defs_stmt -> LSQBR id_list RSQBR DEFINE LSQBR simple_expr_list RSQBR DELIM','var_defs_stmt',8,'p_var_defs_stmt','parser.py',78),
  ('id_list -> ID','id_list',1,'p_id_list','parser.py',82),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','parser.py',83),
  ('expression -> simple_expression','expression',1,'p_expression','parser.py',88),
  ('expression -> complex_expression','expression',1,'p_expression','parser.py',89),
  ('simple_expr_list -> simple_expression','simple_expr_list',1,'p_simple_expr_list','parser.py',94),
  ('simple_expr_list -> simple_expr_list COMMA simple_expression','simple_expr_list',3,'p_simple_expr_list','parser.py',95),
  ('simple_expr_list -> id_list','simple_expr_list',1,'p_simple_expr_list','parser.py',96),
  ('simple_expr_list -> id_list COMMA simple_expression','simple_expr_list',3,'p_simple_expr_list','parser.py',97),
  ('simple_expression -> or_expr','simple_expression',1,'p_simple_expression','parser.py',123),
  ('simple_expression -> or_expr COND simple_expression COND_ELSE simple_expression','simple_expression',5,'p_simple_expression','parser.py',124),
  ('or_expr -> and_expr','or_expr',1,'p_or_expr','parser.py',131),
  ('or_expr -> or_expr OR and_expr','or_expr',3,'p_or_expr','parser.py',132),
  ('and_expr -> eq_expr','and_expr',1,'p_and_expr','parser.py',136),
  ('and_expr -> and_expr AND eq_expr','and_expr',3,'p_and_expr','parser.py',137),
  ('eq_expr -> cmp_expr','eq_expr',1,'p_eq_expr','parser.py',141),
  ('eq_expr -> cmp_expr EQ cmp_expr','eq_expr',3,'p_eq_expr','parser.py',142),
  ('eq_expr -> cmp_expr NEQ cmp_expr','eq_expr',3,'p_eq_expr','parser.py',143),
  ('cmp_expr -> add_expr','cmp_expr',1,'p_cmp_expr','parser.py',147),
  ('cmp_expr -> add_expr GT add_expr','cmp_expr',3,'p_cmp_expr','parser.py',148),
  ('cmp_expr -> add_expr GE add_expr','cmp_expr',3,'p_cmp_expr','parser.py',149),
  ('cmp_expr -> add_expr LT add_expr','cmp_expr',3,'p_cmp_expr','parser.py',150),
  ('cmp_expr -> add_expr LE add_expr','cmp_expr',3,'p_cmp_expr','parser.py',151),
  ('add_expr -> mul_expr','add_expr',1,'p_add_expr','parser.py',155),
  ('add_expr -> add_expr PLUS mul_expr','add_expr',3,'p_add_expr','parser.py',156),
  ('add_expr -> add_expr MINUS mul_expr','add_expr',3,'p_add_expr','parser.py',157),
  ('mul_expr -> unary_expr','mul_expr',1,'p_mul_expr','parser.py',161),
  ('mul_expr -> mul_expr MUL unary_expr','mul_expr',3,'p_mul_expr','parser.py',162),
  ('mul_expr -> mul_expr DIV unary_expr','mul_expr',3,'p_mul_expr','parser.py',163),
  ('mul_expr -> mul_expr MOD unary_expr','mul_expr',3,'p_mul_expr','parser.py',164),
  ('unary_expr -> sqbr_expr','unary_expr',1,'p_unary_expr','parser.py',171),
  ('unary_expr -> NOT sqbr_expr','unary_expr',2,'p_unary_expr','parser.py',172),
  ('unary_expr -> PLUS sqbr_expr','unary_expr',2,'p_unary_expr','parser.py',173),
  ('unary_expr -> MINUS sqbr_expr','unary_expr',2,'p_unary_expr','parser.py',174),
  ('sqbr_expr -> atom','sqbr_expr',1,'p_sqbr_expr','parser.py',181),
  ('sqbr_expr -> atom LSQBR simple_expression RSQBR','sqbr_expr',4,'p_sqbr_expr','parser.py',182),
  ('atom -> fun_call','atom',1,'p_atom','parser.py',186),
  ('atom -> var_ref','atom',1,'p_atom','parser.py',187),
  ('atom -> literal','atom',1,'p_atom','parser.py',188),
  ('atom -> LPAR simple_expression RPAR','atom',3,'p_atom','parser.py',189),
  ('var_ref -> ID','var_ref',1,'p_var_ref','parser.py',196),
  ('fun_call -> fun_call0','fun_call',1,'p_fun_call','parser.py',200),
  ('fun_call -> fun_call1','fun_call',1,'p_fun_call','parser.py',201),
  ('fun_call -> fun_call2','fun_call',1,'p_fun_call','parser.py',202),
  ('fun_call -> fun_call3','fun_call',1,'p_fun_call','parser.py',203),
  ('fun_call -> fun_call4','fun_call',1,'p_fun_call','parser.py',204),
  ('fun_call -> fun_call5','fun_call',1,'p_fun_call','parser.py',205),
  ('fun_call0 -> ID LPAR RPAR','fun_call0',3,'p_fun_call0','parser.py',218),
  ('fun_call1 -> ID LPAR id_list RPAR','fun_call1',4,'p_fun_call1','parser.py',222),
  ('fun_call2 -> ID LPAR simple_expr_list RPAR','fun_call2',4,'p_fun_call2','parser.py',226),
  ('fun_call3 -> ID LPAR kw_arg_list RPAR','fun_call3',4,'p_fun_call3','parser.py',230),
  ('fun_call4 -> ID LPAR id_list COMMA kw_arg_list RPAR','fun_call4',6,'p_fun_call4','parser.py',234),
  ('fun_call5 -> ID LPAR simple_expr_list COMMA kw_arg_list RPAR','fun_call5',6,'p_fun_call5','parser.py',238),
  ('kw_arg_list -> kw_arg','kw_arg_list',1,'p_kw_arg_list','parser.py',242),
  ('kw_arg_list -> kw_arg_list COMMA kw_arg','kw_arg_list',3,'p_kw_arg_list','parser.py',243),
  ('kw_arg -> ID DEFINE simple_expression','kw_arg',3,'p_kw_arg','parser.py',252),
  ('literal -> INT_LITERAL','literal',1,'p_literal','parser.py',256),
  ('literal -> FLOAT_LITERAL','literal',1,'p_literal','parser.py',257),
  ('literal -> STR_LITERAL','literal',1,'p_literal','parser.py',258),
  ('literal -> BOOL_LITERAL','literal',1,'p_literal','parser.py',259),
  ('literal -> COLOR_LITERAL','literal',1,'p_literal','parser.py',260),
  ('literal -> list_literal','literal',1,'p_literal','parser.py',261),
  ('list_literal -> LSQBR simple_expr_list RSQBR','list_literal',3,'p_list_leteral','parser.py',265),
  ('complex_expression -> if_expr','complex_expression',1,'p_complex_expression','parser.py',270),
  ('complex_expression -> for_expr','complex_expression',1,'p_complex_expression','parser.py',271),
  ('if_expr -> IF_COND simple_expression stmts_block','if_expr',3,'p_if_expr','parser.py',275),
  ('if_expr -> IF_COND simple_expression stmts_block IF_COND_ELSE stmts_block','if_expr',5,'p_if_expr','parser.py',276),
  ('for_expr -> FOR_STMT var_def FOR_STMT_TO simple_expression stmts_block','for_expr',5,'p_for_expr','parser.py',283),
  ('for_expr -> FOR_STMT var_def FOR_STMT_TO simple_expression FOR_STMT_BY','for_expr',5,'p_for_expr','parser.py',284),
  ('stmts_block -> BEGIN statement_list END','stmts_block',3,'p_stmts_block','parser.py',288),
  ('fun_def_stmt -> fun_def_stmt_1','fun_def_stmt',1,'p_fun_def_stmt','parser.py',294),
  ('fun_def_stmt -> fun_def_stmt_m','fun_def_stmt',1,'p_fun_def_stmt','parser.py',295),
  ('fun_def_stmt_1 -> ID LPAR id_list RPAR ARROW simple_expression DELIM','fun_def_stmt_1',7,'p_fun_def_stmt_1','parser.py',299),
  ('fun_def_stmt_m -> ID LPAR id_list RPAR ARROW stmts_block','fun_def_stmt_m',6,'p_fun_def_stmt_m','parser.py',303),
]
